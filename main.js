(()=>{"use strict";var __webpack_modules__={56:(module,__unused_webpack_exports,__webpack_require__)=>{eval('\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce =  true ? __webpack_require__.nc : 0;\n  if (nonce) {\n    styleElement.setAttribute("nonce", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTYuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBLGNBQWMsS0FBd0MsR0FBRyxzQkFBaUIsR0FBRyxDQUFJO0FBQ2pGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2RvbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcz9kZGNlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyhzdHlsZUVsZW1lbnQpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///56\n')},72:module=>{eval('\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = "".concat(id, " ").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzIuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHdCQUF3QjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixpQkFBaUI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiw0QkFBNEI7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQiw2QkFBNkI7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2RvbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcz8yZGJhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiB1cGRhdGVyO1xufVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///72\n')},92:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{eval('\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\nvar injectStylesIntoStyleTag = __webpack_require__(72);\nvar injectStylesIntoStyleTag_default = /*#__PURE__*/__webpack_require__.n(injectStylesIntoStyleTag);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleDomAPI.js\nvar styleDomAPI = __webpack_require__(825);\nvar styleDomAPI_default = /*#__PURE__*/__webpack_require__.n(styleDomAPI);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertBySelector.js\nvar insertBySelector = __webpack_require__(659);\nvar insertBySelector_default = /*#__PURE__*/__webpack_require__.n(insertBySelector);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\nvar setAttributesWithoutAttributes = __webpack_require__(56);\nvar setAttributesWithoutAttributes_default = /*#__PURE__*/__webpack_require__.n(setAttributesWithoutAttributes);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertStyleElement.js\nvar insertStyleElement = __webpack_require__(540);\nvar insertStyleElement_default = /*#__PURE__*/__webpack_require__.n(insertStyleElement);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleTagTransform.js\nvar styleTagTransform = __webpack_require__(113);\nvar styleTagTransform_default = /*#__PURE__*/__webpack_require__.n(styleTagTransform);\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/styles.css\nvar styles = __webpack_require__(365);\n;// ./src/styles.css\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (styleTagTransform_default());\noptions.setAttributes = (setAttributesWithoutAttributes_default());\noptions.insert = insertBySelector_default().bind(null, "head");\noptions.domAPI = (styleDomAPI_default());\noptions.insertStyleElement = (insertStyleElement_default());\n\nvar update = injectStylesIntoStyleTag_default()(styles/* default */.A, options);\n\n\n\n\n       /* harmony default export */ const src_styles = (styles/* default */.A && styles/* default */.A.locals ? styles/* default */.A.locals : undefined);\n\n;// ./src/modalHandler.js\n\nfunction initializeModalListeners() { \n    document.querySelector(\'.addProject\').addEventListener(\'click\', (e) => {\n        e.stopPropagation(); //prevents the global click event from closing it\n        document.querySelector(\'.ProjectModal\').showModal();\n    });\n\n    document.querySelector(\'.addTask\').addEventListener(\'click\', (e) => {\n        e.stopPropagation();\n        document.querySelector(\'.TaskModal\').showModal();\n    });\n\n\n    document.addEventListener("click", (e) => {\n        const openDialog = document.querySelector("dialog[open]");\n        if (!openDialog) return;\n\n        const { left, right, top, bottom } = openDialog.getBoundingClientRect();\n        if (e.clientX < left || e.clientX > right || e.clientY < top || e.clientY > bottom) {\n            openDialog.close();\n        }\n    });\n\n    document.querySelector(\'.ProjectModal form\').addEventListener(\'submit\', (e) => {\n        if (!e.target.checkValidity()) return; // Prevents closing if form is invalid\n        e.preventDefault(); \n        document.querySelector(\'.ProjectModal\').close();\n    });\n    \n    document.querySelector(\'.TaskModal form\').addEventListener(\'submit\', (e) => {\n        if (!e.target.checkValidity()) return; // Prevents closing if form is invalid\n        e.preventDefault();\n        document.querySelector(\'.TaskModal\').close();\n    });\n\n}\n\nfunction openEditModal(){\n    const editModal = document.querySelector(\'.editModal\');\n    if(editModal) editModal.showModal();\n}\n\n\n\n;// ./src/creator.js\n\n\nconst state = {\n    todoArr: [],\n    prjArr: []\n  };\n  \n\nconst createTodo = function(name,duedate,important,project,description){\n    let todo ={\n        name: name,\n        duedate: duedate,\n        impStatus: important,\n        project: project,\n        description:description,\n    }\n\n    state.todoArr.push(todo);\n    localStorage.setItem("todos",JSON.stringify(state.todoArr));\n}\n\nfunction createProject(name) {\n    state.prjArr.push(name);\n    localStorage.setItem("projects", JSON.stringify(state.prjArr));\n    renderAllProjects(); // Refreshes the DOM\n}\n\n\n;// ./node_modules/date-fns/constants.js\n/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from "./constants/date-fns/constants";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nconst daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occurs every 4 years, except for years that are divisible by 100 and not divisible by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nconst daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from "./constants/date-fns/constants";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nconst maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from "./constants/date-fns/constants";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nconst minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nconst millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nconst millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nconst millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nconst millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nconst millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nconst minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nconst minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nconst minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nconst minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nconst monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nconst monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nconst quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nconst secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nconst secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nconst secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nconst secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nconst secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nconst secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nconst secondsInQuarter = secondsInMonth * 3;\n\n/**\n * @constant\n * @name constructFromSymbol\n * @summary Symbol enabling Date extensions to inherit properties from the reference date.\n *\n * The symbol is used to enable the `constructFrom` function to construct a date\n * using a reference date and a value. It allows to transfer extra properties\n * from the reference date to the new date. It\'s useful for extensions like\n * [`TZDate`](https://github.com/date-fns/tz) that accept a time zone as\n * a constructor argument.\n */\nconst constructFromSymbol = Symbol.for("constructDateFrom");\n\n;// ./node_modules/date-fns/constructFrom.js\n\n\n/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * Starting from v3.7.0, it allows to construct a date using `[Symbol.for("constructDateFrom")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It\'s useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from "./constructFrom/date-fns";\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date>(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use constructor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   );\n * }\n */\nfunction constructFrom(date, value) {\n  if (typeof date === "function") return date(value);\n\n  if (date && typeof date === "object" && constructFromSymbol in date)\n    return date[constructFromSymbol](value);\n\n  if (date instanceof Date) return new date.constructor(value);\n\n  return new Date(value);\n}\n\n// Fallback for modularized imports:\n/* harmony default export */ const date_fns_constructFrom = ((/* unused pure expression or super */ null && (constructFrom)));\n\n;// ./node_modules/date-fns/constructNow.js\n\n\n/**\n * @name constructNow\n * @category Generic Helpers\n * @summary Constructs a new current date using the passed value constructor.\n * @pure false\n *\n * @description\n * The function constructs a new current date using the constructor from\n * the reference date. It helps to build generic functions that accept date\n * extensions and use the current date.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * @param date - The reference date to take constructor from\n *\n * @returns Current date initialized using the given date constructor\n *\n * @example\n * import { constructNow, isSameDay } from \'date-fns\'\n *\n * function isToday<DateType extends Date>(\n *   date: DateArg<DateType>,\n * ): boolean {\n *   // If we were to use `new Date()` directly, the function would  behave\n *   // differently in different timezones and return false for the same date.\n *   return isSameDay(date, constructNow(date));\n * }\n */\nfunction constructNow(date) {\n  return constructFrom(date, Date.now());\n}\n\n// Fallback for modularized imports:\n/* harmony default export */ const date_fns_constructNow = ((/* unused pure expression or super */ null && (constructNow)));\n\n;// ./node_modules/date-fns/_lib/normalizeDates.js\n\n\nfunction normalizeDates(context, ...dates) {\n  const normalize = constructFrom.bind(\n    null,\n    context || dates.find((date) => typeof date === "object"),\n  );\n  return dates.map(normalize);\n}\n\n;// ./node_modules/date-fns/toDate.js\n\n\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * Starting from v3.7.0, it clones a date using `[Symbol.for("constructDateFrom")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It\'s useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nfunction toDate(argument, context) {\n  // [TODO] Get rid of `toDate` or `constructFrom`?\n  return constructFrom(context || argument, argument);\n}\n\n// Fallback for modularized imports:\n/* harmony default export */ const date_fns_toDate = ((/* unused pure expression or super */ null && (toDate)));\n\n;// ./node_modules/date-fns/startOfDay.js\n\n\n/**\n * The {@link startOfDay} function options.\n */\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nfunction startOfDay(date, options) {\n  const _date = toDate(date, options?.in);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\n/* harmony default export */ const date_fns_startOfDay = ((/* unused pure expression or super */ null && (startOfDay)));\n\n;// ./node_modules/date-fns/isSameDay.js\n\n\n\n/**\n * The {@link isSameDay} function options.\n */\n\n/**\n * @name isSameDay\n * @category Day Helpers\n * @summary Are the given dates in the same day (and year and month)?\n *\n * @description\n * Are the given dates in the same day (and year and month)?\n *\n * @param laterDate - The first date to check\n * @param earlierDate - The second date to check\n * @param options - An object with options\n *\n * @returns The dates are in the same day (and year and month)\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n * //=> true\n *\n * @example\n * // Are 4 September and 4 October in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2014, 9, 4))\n * //=> false\n *\n * @example\n * // Are 4 September, 2014 and 4 September, 2015 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2015, 8, 4))\n * //=> false\n */\nfunction isSameDay(laterDate, earlierDate, options) {\n  const [dateLeft_, dateRight_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n  return +startOfDay(dateLeft_) === +startOfDay(dateRight_);\n}\n\n// Fallback for modularized imports:\n/* harmony default export */ const date_fns_isSameDay = ((/* unused pure expression or super */ null && (isSameDay)));\n\n;// ./node_modules/date-fns/isToday.js\n\n\n\n\n/**\n * The {@link isToday} function options.\n */\n\n/**\n * @name isToday\n * @category Day Helpers\n * @summary Is the given date today?\n * @pure false\n *\n * @description\n * Is the given date today?\n *\n * @param date - The date to check\n * @param options - An object with options\n *\n * @returns The date is today\n *\n * @example\n * // If today is 6 October 2014, is 6 October 14:00:00 today?\n * const result = isToday(new Date(2014, 9, 6, 14, 0))\n * //=> true\n */\nfunction isToday(date, options) {\n  return isSameDay(\n    constructFrom(options?.in || date, date),\n    constructNow(options?.in || date),\n  );\n}\n\n// Fallback for modularized imports:\n/* harmony default export */ const date_fns_isToday = ((/* unused pure expression or super */ null && (isToday)));\n\n;// ./node_modules/date-fns/parseISO.js\n\n\n\n\n/**\n * The {@link parseISO} function options.\n */\n\n/**\n * @name parseISO\n * @category Common Helpers\n * @summary Parse ISO string\n *\n * @description\n * Parse the given string in ISO 8601 format and return an instance of Date.\n *\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If the argument isn\'t a string, the function cannot parse the string or\n * the values are invalid, it returns Invalid Date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param argument - The value to convert\n * @param options - An object with options\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Convert string \'2014-02-11T11:30:30\' to date:\n * const result = parseISO(\'2014-02-11T11:30:30\')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string \'+02014101\' to date,\n * // if the additional number of digits in the extended year format is 1:\n * const result = parseISO(\'+02014101\', { additionalDigits: 1 })\n * //=> Fri Apr 11 2014 00:00:00\n */\nfunction parseISO(argument, options) {\n  const invalidDate = () => constructFrom(options?.in, NaN);\n\n  const additionalDigits = options?.additionalDigits ?? 2;\n  const dateStrings = splitDateString(argument);\n\n  let date;\n  if (dateStrings.date) {\n    const parseYearResult = parseYear(dateStrings.date, additionalDigits);\n    date = parseDate(parseYearResult.restDateString, parseYearResult.year);\n  }\n\n  if (!date || isNaN(+date)) return invalidDate();\n\n  const timestamp = +date;\n  let time = 0;\n  let offset;\n\n  if (dateStrings.time) {\n    time = parseTime(dateStrings.time);\n    if (isNaN(time)) return invalidDate();\n  }\n\n  if (dateStrings.timezone) {\n    offset = parseTimezone(dateStrings.timezone);\n    if (isNaN(offset)) return invalidDate();\n  } else {\n    const tmpDate = new Date(timestamp + time);\n    const result = toDate(0, options?.in);\n    result.setFullYear(\n      tmpDate.getUTCFullYear(),\n      tmpDate.getUTCMonth(),\n      tmpDate.getUTCDate(),\n    );\n    result.setHours(\n      tmpDate.getUTCHours(),\n      tmpDate.getUTCMinutes(),\n      tmpDate.getUTCSeconds(),\n      tmpDate.getUTCMilliseconds(),\n    );\n    return result;\n  }\n\n  return toDate(timestamp + time + offset, options?.in);\n}\n\nconst patterns = {\n  dateTimeDelimiter: /[T ]/,\n  timeZoneDelimiter: /[Z ]/i,\n  timezone: /([Z+-].*)$/,\n};\n\nconst dateRegex =\n  /^-?(?:(\\d{3})|(\\d{2})(?:-?(\\d{2}))?|W(\\d{2})(?:-?(\\d{1}))?|)$/;\nconst timeRegex =\n  /^(\\d{2}(?:[.,]\\d*)?)(?::?(\\d{2}(?:[.,]\\d*)?))?(?::?(\\d{2}(?:[.,]\\d*)?))?$/;\nconst timezoneRegex = /^([+-])(\\d{2})(?::?(\\d{2}))?$/;\n\nfunction splitDateString(dateString) {\n  const dateStrings = {};\n  const array = dateString.split(patterns.dateTimeDelimiter);\n  let timeString;\n\n  // The regex match should only return at maximum two array elements.\n  // [date], [time], or [date, time].\n  if (array.length > 2) {\n    return dateStrings;\n  }\n\n  if (/:/.test(array[0])) {\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];\n      timeString = dateString.substr(\n        dateStrings.date.length,\n        dateString.length,\n      );\n    }\n  }\n\n  if (timeString) {\n    const token = patterns.timezone.exec(timeString);\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], "");\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n\n  return dateStrings;\n}\n\nfunction parseYear(dateString, additionalDigits) {\n  const regex = new RegExp(\n    "^(?:(\\\\d{4}|[+-]\\\\d{" +\n      (4 + additionalDigits) +\n      "})|(\\\\d{2}|[+-]\\\\d{" +\n      (2 + additionalDigits) +\n      "})$)",\n  );\n\n  const captures = dateString.match(regex);\n  // Invalid ISO-formatted year\n  if (!captures) return { year: NaN, restDateString: "" };\n\n  const year = captures[1] ? parseInt(captures[1]) : null;\n  const century = captures[2] ? parseInt(captures[2]) : null;\n\n  // either year or century is null, not both\n  return {\n    year: century === null ? year : century * 100,\n    restDateString: dateString.slice((captures[1] || captures[2]).length),\n  };\n}\n\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) return new Date(NaN);\n\n  const captures = dateString.match(dateRegex);\n  // Invalid ISO-formatted string\n  if (!captures) return new Date(NaN);\n\n  const isWeekDate = !!captures[4];\n  const dayOfYear = parseDateUnit(captures[1]);\n  const month = parseDateUnit(captures[2]) - 1;\n  const day = parseDateUnit(captures[3]);\n  const week = parseDateUnit(captures[4]);\n  const dayOfWeek = parseDateUnit(captures[5]) - 1;\n\n  if (isWeekDate) {\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN);\n    }\n    return dayOfISOWeekYear(year, week, dayOfWeek);\n  } else {\n    const date = new Date(0);\n    if (\n      !validateDate(year, month, day) ||\n      !validateDayOfYearDate(year, dayOfYear)\n    ) {\n      return new Date(NaN);\n    }\n    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));\n    return date;\n  }\n}\n\nfunction parseDateUnit(value) {\n  return value ? parseInt(value) : 1;\n}\n\nfunction parseTime(timeString) {\n  const captures = timeString.match(timeRegex);\n  if (!captures) return NaN; // Invalid ISO-formatted time\n\n  const hours = parseTimeUnit(captures[1]);\n  const minutes = parseTimeUnit(captures[2]);\n  const seconds = parseTimeUnit(captures[3]);\n\n  if (!validateTime(hours, minutes, seconds)) {\n    return NaN;\n  }\n\n  return (\n    hours * millisecondsInHour + minutes * millisecondsInMinute + seconds * 1000\n  );\n}\n\nfunction parseTimeUnit(value) {\n  return (value && parseFloat(value.replace(",", "."))) || 0;\n}\n\nfunction parseTimezone(timezoneString) {\n  if (timezoneString === "Z") return 0;\n\n  const captures = timezoneString.match(timezoneRegex);\n  if (!captures) return 0;\n\n  const sign = captures[1] === "+" ? -1 : 1;\n  const hours = parseInt(captures[2]);\n  const minutes = (captures[3] && parseInt(captures[3])) || 0;\n\n  if (!validateTimezone(hours, minutes)) {\n    return NaN;\n  }\n\n  return sign * (hours * millisecondsInHour + minutes * millisecondsInMinute);\n}\n\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  const date = new Date(0);\n  date.setUTCFullYear(isoWeekYear, 0, 4);\n  const fourthOfJanuaryDay = date.getUTCDay() || 7;\n  const diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}\n\n// Validation functions\n\n// February is null to handle the leap year (using ||)\nconst daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0);\n}\n\nfunction validateDate(year, month, date) {\n  return (\n    month >= 0 &&\n    month <= 11 &&\n    date >= 1 &&\n    date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28))\n  );\n}\n\nfunction validateDayOfYearDate(year, dayOfYear) {\n  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);\n}\n\nfunction validateWeekDate(_year, week, day) {\n  return week >= 1 && week <= 53 && day >= 0 && day <= 6;\n}\n\nfunction validateTime(hours, minutes, seconds) {\n  if (hours === 24) {\n    return minutes === 0 && seconds === 0;\n  }\n\n  return (\n    seconds >= 0 &&\n    seconds < 60 &&\n    minutes >= 0 &&\n    minutes < 60 &&\n    hours >= 0 &&\n    hours < 25\n  );\n}\n\nfunction validateTimezone(_hours, minutes) {\n  return minutes >= 0 && minutes <= 59;\n}\n\n// Fallback for modularized imports:\n/* harmony default export */ const date_fns_parseISO = ((/* unused pure expression or super */ null && (parseISO)));\n\n;// ./node_modules/date-fns/_lib/defaultOptions.js\nlet defaultOptions = {};\n\nfunction getDefaultOptions() {\n  return defaultOptions;\n}\n\nfunction setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n\n;// ./node_modules/date-fns/startOfWeek.js\n\n\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nfunction startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date, options?.in);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\n/* harmony default export */ const date_fns_startOfWeek = ((/* unused pure expression or super */ null && (startOfWeek)));\n\n;// ./node_modules/date-fns/isSameWeek.js\n\n\n\n/**\n * The {@link isSameWeek} function options.\n */\n\n/**\n * @name isSameWeek\n * @category Week Helpers\n * @summary Are the given dates in the same week (and month and year)?\n *\n * @description\n * Are the given dates in the same week (and month and year)?\n *\n * @param laterDate - The first date to check\n * @param earlierDate - The second date to check\n * @param options - An object with options\n *\n * @returns The dates are in the same week (and month and year)\n *\n * @example\n * // Are 31 August 2014 and 4 September 2014 in the same week?\n * const result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4))\n * //=> true\n *\n * @example\n * // If week starts with Monday,\n * // are 31 August 2014 and 4 September 2014 in the same week?\n * const result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4), {\n *   weekStartsOn: 1\n * })\n * //=> false\n *\n * @example\n * // Are 1 January 2014 and 1 January 2015 in the same week?\n * const result = isSameWeek(new Date(2014, 0, 1), new Date(2015, 0, 1))\n * //=> false\n */\nfunction isSameWeek(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n  return (\n    +startOfWeek(laterDate_, options) === +startOfWeek(earlierDate_, options)\n  );\n}\n\n// Fallback for modularized imports:\n/* harmony default export */ const date_fns_isSameWeek = ((/* unused pure expression or super */ null && (isSameWeek)));\n\n;// ./node_modules/date-fns/isThisWeek.js\n\n\n\n\n/**\n * The {@link isThisWeek} function options.\n */\n\n/**\n * @name isThisWeek\n * @category Week Helpers\n * @summary Is the given date in the same week as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same week as the current date?\n *\n * @param date - The date to check\n * @param options - The object with options\n *\n * @returns The date is in this week\n *\n * @example\n * // If today is 25 September 2014, is 21 September 2014 in this week?\n * const result = isThisWeek(new Date(2014, 8, 21))\n * //=> true\n *\n * @example\n * // If today is 25 September 2014 and week starts with Monday\n * // is 21 September 2014 in this week?\n * const result = isThisWeek(new Date(2014, 8, 21), { weekStartsOn: 1 })\n * //=> false\n */\nfunction isThisWeek(date, options) {\n  return isSameWeek(\n    constructFrom(options?.in || date, date),\n    constructNow(options?.in || date),\n    options,\n  );\n}\n\n// Fallback for modularized imports:\n/* harmony default export */ const date_fns_isThisWeek = ((/* unused pure expression or super */ null && (isThisWeek)));\n\n;// ./node_modules/date-fns/endOfWeek.js\n\n\n\n/**\n * The {@link endOfWeek} function options.\n */\n\n/**\n * @name endOfWeek\n * @category Week Helpers\n * @summary Return the end of a week for the given date.\n *\n * @description\n * Return the end of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The end of a week\n *\n * @example\n * // The end of a week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 23:59:59.999\n *\n * @example\n * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 23:59:59.999\n */\nfunction endOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date, options?.in);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n\n  _date.setDate(_date.getDate() + diff);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\n/* harmony default export */ const date_fns_endOfWeek = ((/* unused pure expression or super */ null && (endOfWeek)));\n\n;// ./node_modules/date-fns/isAfter.js\n\n\n/**\n * @name isAfter\n * @category Common Helpers\n * @summary Is the first date after the second one?\n *\n * @description\n * Is the first date after the second one?\n *\n * @param date - The date that should be after the other one to return true\n * @param dateToCompare - The date to compare with\n *\n * @returns The first date is after the second date\n *\n * @example\n * // Is 10 July 1989 after 11 February 1987?\n * const result = isAfter(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> true\n */\nfunction isAfter(date, dateToCompare) {\n  return +toDate(date) > +toDate(dateToCompare);\n}\n\n// Fallback for modularized imports:\n/* harmony default export */ const date_fns_isAfter = ((/* unused pure expression or super */ null && (isAfter)));\n\n;// ./src/taskEditor.js\n\n\n\n\nlet taskBeingEdited = null;\n\nfunction taskEditor(todo){\n    taskBeingEdited = todo;\n\n    populateProjectDropdown();\n\n    console.log(state.prjArr)\n    document.getElementById("editTitle").value = todo.name;\n    document.getElementById("editDueDate").value = todo.duedate || "";\n    document.getElementById("editDescription").value = todo.description || "";\n    document.getElementById("editImportant").checked = todo.impStatus || false;\n    document.getElementById("editSelectProject").value = todo.project || "";\n    console.log(todo.project)\n\n\n    setTimeout(() => {\n        document.querySelector(\'.editModal\').showModal();\n      }, 0);\n      \n}\n\nconst editForm = document.getElementById("editForm");\nif (editForm) {\n    editForm.addEventListener(\'submit\', (e) => {\n        e.preventDefault();\n\n        if (!taskBeingEdited) return;\n\n        taskBeingEdited.name = document.getElementById("editTitle").value;\n        taskBeingEdited.duedate = document.getElementById("editDueDate").value;\n        taskBeingEdited.description = document.getElementById("editDescription").value;\n        taskBeingEdited.impStatus = document.getElementById("editImportant").checked;\n        taskBeingEdited.project = document.getElementById("editSelectProject").value;\n\n        localStorage.setItem("todos", JSON.stringify(state.todoArr));\n\n        document.querySelector(".editModal").close();\n\n        //renderAllTodos(taskBeingEdited.project);\n    });\n}\n\n\nfunction populateProjectDropdown() {\n    const select = document.getElementById("editSelectProject");\n    const projects = state.prjArr;\n  \n    select.innerHTML = ""; // clear old options\n    projects.forEach(project => {\n      const option = document.createElement("option");\n      option.value = project;\n      option.textContent = project;\n      select.appendChild(option);\n    });\n  }\n;// ./src/projectEditor.js\n\n\n\nfunction openDeleteModal(prj){\n    const dltModal = document.querySelector(\'.deleteModal\')\n    setTimeout(() => {\n        dltModal.showModal();\n      }, 0);\n\n    const confirmDlt = document.querySelector(\'.confirmDelete\')\n    const cancelDlt = document.querySelector(\'.cancelDelete\')\n\n    confirmDlt.addEventListener(\'click\',()=>{\n        deleteProject(prj)\n        dltModal.close();\n        renderAllProjects();\n        todayFilter();\n    })\n\n    cancelDlt.addEventListener(\'click\',()=>{\n        dltModal.close();\n    })\n\n}\n\nfunction deleteProject(prj){\n    const index = state.prjArr.indexOf(prj);\n    if (index > -1) {\n        state.prjArr.splice(index, 1);\n        localStorage.setItem(\'projects\', JSON.stringify(state.prjArr));\n    }\n\n    for (let i = state.todoArr.length - 1; i >= 0; i--) {\n        if (state.todoArr[i].project === prj) {\n            state.todoArr.splice(i, 1);\n        }\n    }\n    localStorage.setItem("todos", JSON.stringify(state.todoArr));\n    \n}\n;// ./src/displayUpdater.js\n\n\n\n\n\nfunction renderAllProjects() {\n    document.querySelector("#selectProject").innerHTML = "";\n    document.querySelector(".project").innerHTML = "";\n\n    state.prjArr.forEach(name => {\n        // Option for select dropdown\n        const option = document.createElement("option");\n        option.value = name;\n        option.textContent = name;\n        document.querySelector("#selectProject").append(option);\n\n        // Project button\n        const newProject = document.createElement("button");\n        newProject.setAttribute("data-project", name);\n        newProject.classList.add("projectButton");\n        document.querySelector(".project").appendChild(newProject);\n\n        const projectName = document.createElement("span");\n        projectName.textContent = name;\n        newProject.appendChild(projectName);\n\n        const dltProject = document.createElement(\'span\');\n        dltProject.classList.add(\'deleteProject\');\n        dltProject.innerHTML = `\n        <svg xmlns="http://www.w3.org/2000/svg" class="deleteProject" width="16" height="16" fill="none" stroke="#ff3b30" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" viewBox="0 0 24 24">\n        <polyline points="3 6 5 6 21 6"></polyline>\n        <path d="M19 6l-1 14H6L5 6"></path>\n        <path d="M10 11v6"></path>\n        <path d="M14 11v6"></path>\n        <path d="M9 6V4h6v2"></path>\n        </svg>`;\n        newProject.appendChild(dltProject);\n        dltProject.addEventListener(\'click\', (event) => {\n            const projectButton = dltProject.parentElement;\n            const projectName = projectButton.getAttribute(\'data-project\');\n            openDeleteModal(projectName);\n        });\n        \n    });\n}\n\n\nconst taskDisplay = function(todo){\n    const taskEntry = document.createElement(\'div\');\n    taskEntry.classList.add(\'taskEntry\');\n\n    const newTask = document.createElement(\'div\');\n    newTask.textContent=todo.name;\n\n    const checkbox = document.createElement(\'input\');\n    checkbox.type = "checkbox";\n    checkbox.classList.add(\'checkbox\')\n\n    checkbox.addEventListener(\'change\',()=>{\n        taskEntry.classList.toggle(\'completed\');\n    })\n\n    const taskCheck = document.createElement(\'div\')\n    taskCheck.classList.add(\'taskCheck\');\n    taskCheck.appendChild(checkbox);\n\n    const dlt = document.createElement(\'button\');\n    dlt.classList.add(\'deleteTask\');\n    dlt.innerHTML = `\n    <svg xmlns="http://www.w3.org/2000/svg" class="deleteProject" width="16" height="16" fill="none" stroke="#ff3b30" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" viewBox="0 0 24 24">\n    <polyline points="3 6 5 6 21 6"></polyline>\n    <path d="M19 6l-1 14H6L5 6"></path>\n    <path d="M10 11v6"></path>\n    <path d="M14 11v6"></path>\n    <path d="M9 6V4h6v2"></path>\n    </svg>`;\n    dlt.addEventListener(\'click\',()=>{\n        state.todoArr.splice(state.todoArr.indexOf(todo), 1);\n        localStorage.setItem("todos",JSON.stringify(state.todoArr));\n        taskEntry.remove();\n    })\n\n    const edit = document.createElement(\'button\');\n    edit.innerHTML = `\n    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="none" stroke="#007AFF" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" viewBox="0 0 24 24">\n    <path d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"></path>\n    <path d="M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z"></path>\n    </svg>`;\n    edit.classList.add(\'editTask\');\n    edit.addEventListener(\'click\',()=>{\n        console.log("taskEditor called for:", todo);\n        taskEditor(todo);\n    })\n\n    \n    if(todo.impStatus){\n        const imp = document.createElement(\'span\');\n        imp.addEventListener(\'click\',()=>{\n            todo.impStatus = !(todo.impStatus);\n        })\n\n        imp.classList.add("impStatus");\n        imp.textContent=\'Important\'\n        taskCheck.appendChild(imp);\n    }\n\n    const taskOptions = document.createElement(\'div\');\n    taskOptions.classList.add(\'taskOptions\');\n\n    taskEntry.appendChild(taskCheck);\n    taskCheck.appendChild(newTask);\n    taskEntry.appendChild(taskOptions);\n    taskOptions.appendChild(edit);\n    taskOptions.appendChild(dlt);\n    \n\n    document.querySelector(\'.taskContainer\').appendChild(taskEntry);\n};\n\nconst renderAllTodos = function(project = null) {\n    document.querySelector(\'.taskContainer\').innerHTML = "";\n\n    const filteredTasks = project\n        ? state.todoArr.filter(task => task.project === project)\n        : state.todoArr;\n\n    filteredTasks.forEach(task => {\n        taskDisplay(task);\n    });\n};\n\nconst todayFilter = function(){\nif(state.todoArr.length>0)\n    document.querySelector(\'.taskContainer\').innerHTML="";\n    \n    const todayTasks= state.todoArr.filter(task=>isToday(parseISO(task.duedate)));\n\n    todayTasks.forEach(task=>{\n        taskDisplay(task);\n    });\n}\n\nconst weekFilter = function(){\n    if(state.todoArr.length>0){\n        document.querySelector(\'.taskContainer\').innerHTML="";\n    \n        const weekTasks= state.todoArr.filter(task=>isThisWeek(parseISO(task.duedate),{weekStartsOn: 1}));\n\n        weekTasks.forEach(task=>{\n            taskDisplay(task);\n        });\n    }\n}\n\nconst laterFilter = function(){\n    if(state.todoArr.length>0){\n        document.querySelector(\'.taskContainer\').innerHTML="";\n    \n        let weekEnd = endOfWeek(new Date(), {weekStartsOn: 1});\n        const laterTasks= state.todoArr.filter(task=>isAfter(parseISO(task.duedate),weekEnd));\n\n        laterTasks.forEach(task=>{\n            taskDisplay(task);\n        });\n    }\n}\n;// ./src/index.js\n\n\n\n\n\ndocument.addEventListener(\'DOMContentLoaded\',initializeModalListeners);\n\n\ndocument.addEventListener(\'DOMContentLoaded\',()=>{\n    const savedTodos = JSON.parse(localStorage.getItem(\'todos\')) || [];\n    state.todoArr = savedTodos;\n    state.prjArr = JSON.parse(localStorage.getItem(\'projects\')) || [];\n    renderAllProjects()\n})\n\n\ndocument.querySelector(\'.submitProject\').addEventListener(\'click\',()=>{\n    const projectTitle = document.querySelector(\'#projectTitle\');\n    createProject(projectTitle.value);\n})\n\ndocument.querySelector(\'.submitTask\').addEventListener(\'click\',()=>{\n    const title = document.querySelector("#taskTitle").value;\n    const date = document.querySelector("#DueDate").value;\n    const important = document.querySelector("#important").checked;\n    const project = document.querySelector("#selectProject").value;\n    const description = document.querySelector("#description").value;\n\n    createTodo(title,date,important,project,description);\n    renderAllTodos(project);\n})\n\ndocument.querySelector(\'.project\').addEventListener(\'click\', (event) => {\n    const button = event.target.closest(\'.projectButton\');\n    if (!button) return;\n\n    const prj = button.getAttribute(\'data-project\');\n    renderAllTodos(prj);\n});\n\ndocument.querySelector(\'.today\').addEventListener(\'click\',()=>{\n    todayFilter();\n})\n\ndocument.querySelector(\'.thisWeek\').addEventListener(\'click\',()=>{\n    weekFilter();\n})\n\ndocument.querySelector(\'.later\').addEventListener(\'click\',()=>{\n    laterFilter();\n})//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///92\n')},113:module=>{eval("\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTEzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG9kb2xpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcz8xZGRlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///113\n")},314:module=>{eval('\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = "";\n      var needLayer = typeof item[5] !== "undefined";\n      if (item[4]) {\n        content += "@supports (".concat(item[4], ") {");\n      }\n      if (item[2]) {\n        content += "@media ".concat(item[2], " {");\n      }\n      if (needLayer) {\n        content += "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += "}";\n      }\n      if (item[2]) {\n        content += "}";\n      }\n      if (item[4]) {\n        content += "}";\n      }\n      return content;\n    }).join("");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === "string") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== "undefined") {\n        if (typeof item[5] === "undefined") {\n          item[5] = layer;\n        } else {\n          item[1] = "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {").concat(item[1], "}");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = "@media ".concat(item[2], " {").concat(item[1], "}");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = "".concat(supports);\n        } else {\n          item[1] = "@supports (".concat(item[4], ") {").concat(item[1], "}");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzE0LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxREFBcUQ7QUFDckQ7QUFDQTtBQUNBLGdEQUFnRDtBQUNoRDtBQUNBO0FBQ0EscUZBQXFGO0FBQ3JGO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixpQkFBaUI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLHFCQUFxQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixzRkFBc0YscUJBQXFCO0FBQzNHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixpREFBaUQscUJBQXFCO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixzREFBc0QscUJBQXFCO0FBQzNFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2RvbGlzdC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanM/MjRmYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTtcblxuICAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTtcblxuICAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIGxpc3Q7XG59OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///314\n')},354:module=>{eval('\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === "function") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);\n    var sourceMapping = "/*# ".concat(data, " */");\n    return [content].concat([sourceMapping]).join("\\n");\n  }\n  return [content].join("\\n");\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzU0LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1REFBdUQsY0FBYztBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG9kb2xpc3QvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcz9hZjEyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVtKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXTtcbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuICBpZiAodHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKFwiXFxuXCIpO1xuICB9XG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///354\n')},365:(module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(354);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(314);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/* Add these variables at the top of your existing CSS file */\n:root {\n    --accent-color: #0071e3;\n    --accent-hover: #0077ed;\n    --bg-color: #f2f2f7;\n    --card-bg: #ffffff;\n    --text-primary: #1d1d1f;\n    --text-secondary: #86868b;\n    --border-color: rgba(0, 0, 0, 0.1);\n    --shadow-light: 0 2px 10px rgba(0, 0, 0, 0.05);\n  }\n  \n  /* Modify your existing body styles */\n  body {\n    margin: 0;\n    font-family: -apple-system, BlinkMacSystemFont, "Work Sans", "Segoe UI", Roboto, sans-serif;\n    height: 100vh;\n    overflow: hidden;\n    background-color: var(--bg-color);\n    color: var(--text-primary);\n  }\n  \n  /* Enhance the existing container */\n  .container {\n    display: flex;\n    margin: 0;\n    height: 100%;\n    overflow: hidden;\n  }\n  \n  /* Enhance the task area */\n  .task {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    width: 100%;\n    padding: 1.5rem;\n    background-color: #d5d5d69c;\n    overflow: hidden;\n    gap: 0.75rem;\n    box-sizing: border-box;\n  }\n  \n  /* Improve the taskContainer */\n  .taskContainer {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    background-color: var(--card-bg);\n    border-radius: 16px;\n    padding: 1.5rem;\n    overflow: auto;\n    gap: 0.75rem;\n    box-sizing: border-box;\n    min-height: 0;\n    box-shadow: var(--shadow-light);\n    border: 1px solid var(--border-color);\n  }\n  \n  /* Enhance task entries */\n  .taskEntry {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    height: 3rem;\n    font-size: 1.1rem;\n    border: 1px solid var(--border-color);\n    border-radius: 12px;\n    padding: 0 1rem;\n    margin: 5px;\n    background-color: white;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.02);\n    transition: all 0.2s ease;\n  }\n  \n  .taskEntry:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.05);\n  }\n\n  .taskOption{\n    display: flex;\n    width: 3rem;\n    gap: 1rem;\n  }\n\n  .taskCheck{\n    display: flex;\n    gap: 1.5rem;\n  }\n\n  .deleteTask,\n  .editTask{\n    outline:none;\n    border: none;\n    background: transparent;\n    padding: 0\n  }\n\n  .impStatus{\n    border: 2px solid red;\n    color: red;\n    border-radius: 12px;\n    padding: 5px;\n  }\n  \n  /* Modify project pane */\n  .projectPane {\n    width: 14rem;\n    padding: 1.5rem 1rem;\n    background-color: rgba(240, 237, 228, 0.8);\n    border-right: 1px solid var(--border-color);\n    box-shadow: 2px 0 5px rgba(0, 0, 0, 0.05);\n    display: flex;\n    flex-direction: column;\n    gap: 0.75rem;\n    height: 100%;\n    flex-shrink: 0;\n    overflow-y: auto;\n  }\n  \n  /* Enhance project pane buttons */\n  .projectPane button {\n    padding: 0.75rem 1rem;\n    box-sizing: border-box;\n    width: 100%;\n    color: var(--text-primary);\n    font-size: 1rem;\n    background: transparent;\n    border: none;\n    border-radius: 8px;\n    text-align: left;\n    cursor: pointer;\n    transition: background 0.2s ease;\n  }\n  \n  .projectPane button:hover {\n    background-color: rgba(0, 0, 0, 0.05);\n  }\n  \n  /* Make the add project button more Apple-like */\n  .projectPane .addProject {\n    background-color: var(--accent-color);\n    color: white;\n    border: none;\n    font-weight: 500;\n    margin-top: 1rem;\n    border-radius: 8px;\n    transition: all 0.2s ease;\n  }\n  \n  .projectPane .addProject:hover {\n    background-color: var(--accent-hover);\n    transform: translateY(-2px);\n  }\n  \n  /* Improve the delete project icon */\n  .deleteProject,\n  .deleteTask {\n    cursor: pointer;\n    margin-left: 0.5rem;\n    transition: all 0.2s ease;\n    opacity: 0.7;\n  }\n  \n  .deleteProject:hover,\n  .deleteTask:hover {\n    color: #ff3b30;\n    opacity: 1;\n  }\n\n  .editTask {\n    cursor: pointer;\n    margin-left: 0.5rem;\n    transition: all 0.2s ease;\n    opacity: 0.6;\n  }\n  \n  .editTask:hover {\n    color: #055bb6;\n    opacity: 1;\n  }\n  \n  /* Enhance the project modal */\n  .ProjectModal {\n    border: none;\n    border-radius: 16px;\n    padding: 2rem;\n    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);\n    width: 90%;\n    max-width: 400px;\n    font-family: -apple-system, BlinkMacSystemFont, \'Work Sans\', \'Segoe UI\', sans-serif;\n    color: var(--text-primary);\n  }\n  \n  /* Improve form elements */\n  input[type="text"] {\n    padding: 0.8rem 1rem;\n    font-size: 1rem;\n    border: 1px solid var(--border-color);\n    border-radius: 8px;\n    background-color: #fafafa;\n    color: var(--text-primary);\n    transition: all 0.2s ease;\n  }\n  \n  input[type="text"]:focus {\n    outline: none;\n    border-color: var(--accent-color);\n    background-color: #fff;\n    box-shadow: 0 0 0 3px rgba(0, 113, 227, 0.15);\n  }\n  \n  /* Enhance submit project button */\n  .submitProject {\n    background-color: var(--accent-color);\n    color: white;\n    border: none;\n    padding: 0.8rem;\n    border-radius: 8px;\n    font-size: 1rem;\n    font-weight: 500;\n    cursor: pointer;\n    transition: all 0.2s ease;\n  }\n  \n  .submitProject:hover {\n    background-color: var(--accent-hover);\n  }\n  \n  /* Make the add task button more Apple-like */\n  .addTask {\n    padding: 0.8rem 1rem;\n    border-radius: 10px;\n    width: 100%;\n    display: block;\n    background-color: var(--accent-color);\n    border: none;\n    color: white;\n    font-size: 1rem;\n    font-weight: 500;\n    transition: all 0.2s ease;\n    box-sizing: border-box;\n    margin-bottom: 1rem;\n    cursor: pointer;\n  }\n  \n  .addTask:hover {\n    background-color: var(--accent-hover);\n    transform: translateY(-2px);\n    box-shadow: 0 4px 10px rgba(0, 113, 227, 0.2);\n  }\n  \n  .checkbox {\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    border: 2px solid #ddd;\n    margin-right: 12px;\n    cursor: pointer;\n    transition: all 0.2s ease;\n  }\n  \n  .checkbox:checked {\n    background-color: #34c759;\n    border-color: #34c759;\n  }\n  \n  .completed {\n    text-decoration: line-through;\n    color: var(--text-secondary);\n  }\n\n  /* Apple-styled dialog modals */\n.TaskModal,\n.editModal,\n.deleteModal {\n  border: none;\n  border-radius: 20px;\n  padding: 2rem;\n  background-color: rgba(255, 255, 255, 0.95);\n  backdrop-filter: blur(15px);\n  -webkit-backdrop-filter: blur(15px);\n  box-shadow: 0 10px 40px rgba(0, 0, 0, 0.2);\n  width: 90%;\n  overflow: auto;\n  max-width: 500px;\n  font-family: -apple-system, BlinkMacSystemFont, \'Work Sans\', \'Segoe UI\', sans-serif;\n  color: var(--text-primary);\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  margin: auto;\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n}\n\n.TaskModal,\n.editModal{\n    height: 90vh;\n}\n.TaskModal::backdrop,\n.editModal::backdrop,\n.deleteModal::backdrop,\n.ProjectModal::backdrop {\n  background-color: rgba(0, 0, 0, 0.4);\n  backdrop-filter: blur(3px);\n  -webkit-backdrop-filter: blur(3px);\n}\n\n.TaskModal::-webkit-scrollbar,\n.editModal::-webkit-scrollbar{\n  display: none;\n}\n\n/* Form styling */\n#TaskForm,\n#editForm {\n  display: flex;\n  flex-direction: column;\n  gap: 1.2rem;\n}\n\n.TaskModal h3,\n.editModal h3 {\n  font-size: 1.5rem;\n  font-weight: 600;\n  margin-top: 0;\n  margin-bottom: 1.5rem;\n  color: #1d1d1f;\n}\n\n.TaskModal label,\n.editModal label {\n  font-size: 0.95rem;\n  font-weight: 500;\n  color: #86868b;\n  margin-bottom: 0.3rem;\n  display: block;\n}\n\n/* Checkbox label should be inline */\n.TaskModal label:has(input[type="checkbox"]),\n.editModal label:has(input[type="checkbox"]) {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  margin: 0.5rem 0;\n}\n\n.TaskModal input[type="text"],\n.TaskModal input[type="date"],\n.TaskModal select,\n.editModal input[type="text"],\n.editModal input[type="date"],\n.editModal select {\n  padding: 0.9rem 1rem;\n  font-size: 1rem;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: 10px;\n  background-color: rgba(255, 255, 255, 0.8);\n  color: #1d1d1f;\n  transition: all 0.2s ease;\n  width: 100%;\n  box-sizing: border-box;\n}\n\n.TaskModal textarea,\n.editModal textarea {\n  padding: 0.9rem 1rem;\n  font-size: 1rem;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: 10px;\n  background-color: rgba(255, 255, 255, 0.8);\n  color: #1d1d1f;\n  transition: all 0.2s ease;\n  width: 100%;\n  box-sizing: border-box;\n  resize: vertical;\n  font-family: -apple-system, BlinkMacSystemFont, \'Work Sans\', \'Segoe UI\', sans-serif;\n}\n\n.TaskModal input[type="text"]:focus,\n.TaskModal input[type="date"]:focus,\n.TaskModal select:focus,\n.TaskModal textarea:focus,\n.editModal input[type="text"]:focus,\n.editModal input[type="date"]:focus,\n.editModal select:focus,\n.editModal textarea:focus {\n  outline: none;\n  border-color: #0071e3;\n  background-color: white;\n  box-shadow: 0 0 0 4px rgba(0, 113, 227, 0.15);\n}\n\n/* Custom checkbox styling */\n.TaskModal input[type="checkbox"],\n.editModal input[type="checkbox"] {\n  appearance: none;\n  -webkit-appearance: none;\n  width: 20px;\n  height: 20px;\n  border: 1px solid rgba(0, 0, 0, 0.15);\n  border-radius: 5px;\n  background-color: white;\n  cursor: pointer;\n  position: relative;\n  transition: all 0.2s ease;\n}\n\n.TaskModal input[type="checkbox"]:checked,\n.editModal input[type="checkbox"]:checked {\n  background-color: #0071e3;\n  border-color: #0071e3;\n}\n\n.TaskModal input[type="checkbox"]:checked::after,\n.editModal input[type="checkbox"]:checked::after {\n  content: "";\n  position: absolute;\n  left: 7px;\n  top: 3px;\n  width: 4px;\n  height: 10px;\n  border: solid white;\n  border-width: 0 2px 2px 0;\n  transform: rotate(45deg);\n}\n\n/* Button styling */\n.submitTask,\n.submitEdit {\n  background-color: #0071e3;\n  color: white;\n  border: none;\n  padding: 0.9rem;\n  border-radius: 10px;\n  font-size: 1rem;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  margin-top: 0.5rem;\n}\n\n.submitTask:hover,\n.submitEdit:hover {\n  background-color: #0077ed;\n  transform: translateY(-1px);\n}\n\n/* Delete modal styling */\n.deleteModal {\n  text-align: center;\n  padding: 2rem;\n  max-width: 400px;\n}\n\n.deleteModal p {\n  font-size: 1.1rem;\n  margin-bottom: 1.5rem;\n  color: #1d1d1f;\n}\n\n.deleteModal button {\n  padding: 0.8rem 1.5rem;\n  border-radius: 10px;\n  font-size: 1rem;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  margin: 0 0.5rem;\n}\n\n.confirmDelete {\n  background-color: #ff3b30;\n  color: white;\n  border: none;\n}\n\n.confirmDelete:hover {\n  background-color: #ff453a;\n}\n\n.cancelDelete {\n  background-color: transparent;\n  color: #0071e3;\n  border: 1px solid #0071e3;\n}\n\n.cancelDelete:hover {\n  background-color: rgba(0, 113, 227, 0.1);\n}\n\n/* Focus states for accessibility */\nbutton:focus,\ninput:focus,\nselect:focus,\ntextarea:focus {\n  outline: none;\n}\n\n@media (max-width: 600px) {\n  .TaskModal,\n  .editModal,\n  .deleteModal {\n    padding: 1.5rem;\n    width: 95%;\n  }\n}\n`, "",{"version":3,"sources":["webpack://./src/styles.css"],"names":[],"mappings":"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","sourcesContent":["/* Add these variables at the top of your existing CSS file */\\n:root {\\n    --accent-color: #0071e3;\\n    --accent-hover: #0077ed;\\n    --bg-color: #f2f2f7;\\n    --card-bg: #ffffff;\\n    --text-primary: #1d1d1f;\\n    --text-secondary: #86868b;\\n    --border-color: rgba(0, 0, 0, 0.1);\\n    --shadow-light: 0 2px 10px rgba(0, 0, 0, 0.05);\\n  }\\n  \\n  /* Modify your existing body styles */\\n  body {\\n    margin: 0;\\n    font-family: -apple-system, BlinkMacSystemFont, \\"Work Sans\\", \\"Segoe UI\\", Roboto, sans-serif;\\n    height: 100vh;\\n    overflow: hidden;\\n    background-color: var(--bg-color);\\n    color: var(--text-primary);\\n  }\\n  \\n  /* Enhance the existing container */\\n  .container {\\n    display: flex;\\n    margin: 0;\\n    height: 100%;\\n    overflow: hidden;\\n  }\\n  \\n  /* Enhance the task area */\\n  .task {\\n    display: flex;\\n    flex-direction: column;\\n    height: 100%;\\n    width: 100%;\\n    padding: 1.5rem;\\n    background-color: #d5d5d69c;\\n    overflow: hidden;\\n    gap: 0.75rem;\\n    box-sizing: border-box;\\n  }\\n  \\n  /* Improve the taskContainer */\\n  .taskContainer {\\n    display: flex;\\n    flex-direction: column;\\n    flex: 1;\\n    background-color: var(--card-bg);\\n    border-radius: 16px;\\n    padding: 1.5rem;\\n    overflow: auto;\\n    gap: 0.75rem;\\n    box-sizing: border-box;\\n    min-height: 0;\\n    box-shadow: var(--shadow-light);\\n    border: 1px solid var(--border-color);\\n  }\\n  \\n  /* Enhance task entries */\\n  .taskEntry {\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n    height: 3rem;\\n    font-size: 1.1rem;\\n    border: 1px solid var(--border-color);\\n    border-radius: 12px;\\n    padding: 0 1rem;\\n    margin: 5px;\\n    background-color: white;\\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.02);\\n    transition: all 0.2s ease;\\n  }\\n  \\n  .taskEntry:hover {\\n    transform: translateY(-2px);\\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.05);\\n  }\\n\\n  .taskOption{\\n    display: flex;\\n    width: 3rem;\\n    gap: 1rem;\\n  }\\n\\n  .taskCheck{\\n    display: flex;\\n    gap: 1.5rem;\\n  }\\n\\n  .deleteTask,\\n  .editTask{\\n    outline:none;\\n    border: none;\\n    background: transparent;\\n    padding: 0\\n  }\\n\\n  .impStatus{\\n    border: 2px solid red;\\n    color: red;\\n    border-radius: 12px;\\n    padding: 5px;\\n  }\\n  \\n  /* Modify project pane */\\n  .projectPane {\\n    width: 14rem;\\n    padding: 1.5rem 1rem;\\n    background-color: rgba(240, 237, 228, 0.8);\\n    border-right: 1px solid var(--border-color);\\n    box-shadow: 2px 0 5px rgba(0, 0, 0, 0.05);\\n    display: flex;\\n    flex-direction: column;\\n    gap: 0.75rem;\\n    height: 100%;\\n    flex-shrink: 0;\\n    overflow-y: auto;\\n  }\\n  \\n  /* Enhance project pane buttons */\\n  .projectPane button {\\n    padding: 0.75rem 1rem;\\n    box-sizing: border-box;\\n    width: 100%;\\n    color: var(--text-primary);\\n    font-size: 1rem;\\n    background: transparent;\\n    border: none;\\n    border-radius: 8px;\\n    text-align: left;\\n    cursor: pointer;\\n    transition: background 0.2s ease;\\n  }\\n  \\n  .projectPane button:hover {\\n    background-color: rgba(0, 0, 0, 0.05);\\n  }\\n  \\n  /* Make the add project button more Apple-like */\\n  .projectPane .addProject {\\n    background-color: var(--accent-color);\\n    color: white;\\n    border: none;\\n    font-weight: 500;\\n    margin-top: 1rem;\\n    border-radius: 8px;\\n    transition: all 0.2s ease;\\n  }\\n  \\n  .projectPane .addProject:hover {\\n    background-color: var(--accent-hover);\\n    transform: translateY(-2px);\\n  }\\n  \\n  /* Improve the delete project icon */\\n  .deleteProject,\\n  .deleteTask {\\n    cursor: pointer;\\n    margin-left: 0.5rem;\\n    transition: all 0.2s ease;\\n    opacity: 0.7;\\n  }\\n  \\n  .deleteProject:hover,\\n  .deleteTask:hover {\\n    color: #ff3b30;\\n    opacity: 1;\\n  }\\n\\n  .editTask {\\n    cursor: pointer;\\n    margin-left: 0.5rem;\\n    transition: all 0.2s ease;\\n    opacity: 0.6;\\n  }\\n  \\n  .editTask:hover {\\n    color: #055bb6;\\n    opacity: 1;\\n  }\\n  \\n  /* Enhance the project modal */\\n  .ProjectModal {\\n    border: none;\\n    border-radius: 16px;\\n    padding: 2rem;\\n    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);\\n    width: 90%;\\n    max-width: 400px;\\n    font-family: -apple-system, BlinkMacSystemFont, \'Work Sans\', \'Segoe UI\', sans-serif;\\n    color: var(--text-primary);\\n  }\\n  \\n  /* Improve form elements */\\n  input[type=\\"text\\"] {\\n    padding: 0.8rem 1rem;\\n    font-size: 1rem;\\n    border: 1px solid var(--border-color);\\n    border-radius: 8px;\\n    background-color: #fafafa;\\n    color: var(--text-primary);\\n    transition: all 0.2s ease;\\n  }\\n  \\n  input[type=\\"text\\"]:focus {\\n    outline: none;\\n    border-color: var(--accent-color);\\n    background-color: #fff;\\n    box-shadow: 0 0 0 3px rgba(0, 113, 227, 0.15);\\n  }\\n  \\n  /* Enhance submit project button */\\n  .submitProject {\\n    background-color: var(--accent-color);\\n    color: white;\\n    border: none;\\n    padding: 0.8rem;\\n    border-radius: 8px;\\n    font-size: 1rem;\\n    font-weight: 500;\\n    cursor: pointer;\\n    transition: all 0.2s ease;\\n  }\\n  \\n  .submitProject:hover {\\n    background-color: var(--accent-hover);\\n  }\\n  \\n  /* Make the add task button more Apple-like */\\n  .addTask {\\n    padding: 0.8rem 1rem;\\n    border-radius: 10px;\\n    width: 100%;\\n    display: block;\\n    background-color: var(--accent-color);\\n    border: none;\\n    color: white;\\n    font-size: 1rem;\\n    font-weight: 500;\\n    transition: all 0.2s ease;\\n    box-sizing: border-box;\\n    margin-bottom: 1rem;\\n    cursor: pointer;\\n  }\\n  \\n  .addTask:hover {\\n    background-color: var(--accent-hover);\\n    transform: translateY(-2px);\\n    box-shadow: 0 4px 10px rgba(0, 113, 227, 0.2);\\n  }\\n  \\n  .checkbox {\\n    width: 20px;\\n    height: 20px;\\n    border-radius: 50%;\\n    border: 2px solid #ddd;\\n    margin-right: 12px;\\n    cursor: pointer;\\n    transition: all 0.2s ease;\\n  }\\n  \\n  .checkbox:checked {\\n    background-color: #34c759;\\n    border-color: #34c759;\\n  }\\n  \\n  .completed {\\n    text-decoration: line-through;\\n    color: var(--text-secondary);\\n  }\\n\\n  /* Apple-styled dialog modals */\\n.TaskModal,\\n.editModal,\\n.deleteModal {\\n  border: none;\\n  border-radius: 20px;\\n  padding: 2rem;\\n  background-color: rgba(255, 255, 255, 0.95);\\n  backdrop-filter: blur(15px);\\n  -webkit-backdrop-filter: blur(15px);\\n  box-shadow: 0 10px 40px rgba(0, 0, 0, 0.2);\\n  width: 90%;\\n  overflow: auto;\\n  max-width: 500px;\\n  font-family: -apple-system, BlinkMacSystemFont, \'Work Sans\', \'Segoe UI\', sans-serif;\\n  color: var(--text-primary);\\n  border: 1px solid rgba(0, 0, 0, 0.1);\\n  margin: auto;\\n  -ms-overflow-style: none;\\n  scrollbar-width: none;\\n}\\n\\n.TaskModal,\\n.editModal{\\n    height: 90vh;\\n}\\n.TaskModal::backdrop,\\n.editModal::backdrop,\\n.deleteModal::backdrop,\\n.ProjectModal::backdrop {\\n  background-color: rgba(0, 0, 0, 0.4);\\n  backdrop-filter: blur(3px);\\n  -webkit-backdrop-filter: blur(3px);\\n}\\n\\n.TaskModal::-webkit-scrollbar,\\n.editModal::-webkit-scrollbar{\\n  display: none;\\n}\\n\\n/* Form styling */\\n#TaskForm,\\n#editForm {\\n  display: flex;\\n  flex-direction: column;\\n  gap: 1.2rem;\\n}\\n\\n.TaskModal h3,\\n.editModal h3 {\\n  font-size: 1.5rem;\\n  font-weight: 600;\\n  margin-top: 0;\\n  margin-bottom: 1.5rem;\\n  color: #1d1d1f;\\n}\\n\\n.TaskModal label,\\n.editModal label {\\n  font-size: 0.95rem;\\n  font-weight: 500;\\n  color: #86868b;\\n  margin-bottom: 0.3rem;\\n  display: block;\\n}\\n\\n/* Checkbox label should be inline */\\n.TaskModal label:has(input[type=\\"checkbox\\"]),\\n.editModal label:has(input[type=\\"checkbox\\"]) {\\n  display: flex;\\n  align-items: center;\\n  gap: 0.5rem;\\n  margin: 0.5rem 0;\\n}\\n\\n.TaskModal input[type=\\"text\\"],\\n.TaskModal input[type=\\"date\\"],\\n.TaskModal select,\\n.editModal input[type=\\"text\\"],\\n.editModal input[type=\\"date\\"],\\n.editModal select {\\n  padding: 0.9rem 1rem;\\n  font-size: 1rem;\\n  border: 1px solid rgba(0, 0, 0, 0.1);\\n  border-radius: 10px;\\n  background-color: rgba(255, 255, 255, 0.8);\\n  color: #1d1d1f;\\n  transition: all 0.2s ease;\\n  width: 100%;\\n  box-sizing: border-box;\\n}\\n\\n.TaskModal textarea,\\n.editModal textarea {\\n  padding: 0.9rem 1rem;\\n  font-size: 1rem;\\n  border: 1px solid rgba(0, 0, 0, 0.1);\\n  border-radius: 10px;\\n  background-color: rgba(255, 255, 255, 0.8);\\n  color: #1d1d1f;\\n  transition: all 0.2s ease;\\n  width: 100%;\\n  box-sizing: border-box;\\n  resize: vertical;\\n  font-family: -apple-system, BlinkMacSystemFont, \'Work Sans\', \'Segoe UI\', sans-serif;\\n}\\n\\n.TaskModal input[type=\\"text\\"]:focus,\\n.TaskModal input[type=\\"date\\"]:focus,\\n.TaskModal select:focus,\\n.TaskModal textarea:focus,\\n.editModal input[type=\\"text\\"]:focus,\\n.editModal input[type=\\"date\\"]:focus,\\n.editModal select:focus,\\n.editModal textarea:focus {\\n  outline: none;\\n  border-color: #0071e3;\\n  background-color: white;\\n  box-shadow: 0 0 0 4px rgba(0, 113, 227, 0.15);\\n}\\n\\n/* Custom checkbox styling */\\n.TaskModal input[type=\\"checkbox\\"],\\n.editModal input[type=\\"checkbox\\"] {\\n  appearance: none;\\n  -webkit-appearance: none;\\n  width: 20px;\\n  height: 20px;\\n  border: 1px solid rgba(0, 0, 0, 0.15);\\n  border-radius: 5px;\\n  background-color: white;\\n  cursor: pointer;\\n  position: relative;\\n  transition: all 0.2s ease;\\n}\\n\\n.TaskModal input[type=\\"checkbox\\"]:checked,\\n.editModal input[type=\\"checkbox\\"]:checked {\\n  background-color: #0071e3;\\n  border-color: #0071e3;\\n}\\n\\n.TaskModal input[type=\\"checkbox\\"]:checked::after,\\n.editModal input[type=\\"checkbox\\"]:checked::after {\\n  content: \\"\\";\\n  position: absolute;\\n  left: 7px;\\n  top: 3px;\\n  width: 4px;\\n  height: 10px;\\n  border: solid white;\\n  border-width: 0 2px 2px 0;\\n  transform: rotate(45deg);\\n}\\n\\n/* Button styling */\\n.submitTask,\\n.submitEdit {\\n  background-color: #0071e3;\\n  color: white;\\n  border: none;\\n  padding: 0.9rem;\\n  border-radius: 10px;\\n  font-size: 1rem;\\n  font-weight: 500;\\n  cursor: pointer;\\n  transition: all 0.2s ease;\\n  margin-top: 0.5rem;\\n}\\n\\n.submitTask:hover,\\n.submitEdit:hover {\\n  background-color: #0077ed;\\n  transform: translateY(-1px);\\n}\\n\\n/* Delete modal styling */\\n.deleteModal {\\n  text-align: center;\\n  padding: 2rem;\\n  max-width: 400px;\\n}\\n\\n.deleteModal p {\\n  font-size: 1.1rem;\\n  margin-bottom: 1.5rem;\\n  color: #1d1d1f;\\n}\\n\\n.deleteModal button {\\n  padding: 0.8rem 1.5rem;\\n  border-radius: 10px;\\n  font-size: 1rem;\\n  font-weight: 500;\\n  cursor: pointer;\\n  transition: all 0.2s ease;\\n  margin: 0 0.5rem;\\n}\\n\\n.confirmDelete {\\n  background-color: #ff3b30;\\n  color: white;\\n  border: none;\\n}\\n\\n.confirmDelete:hover {\\n  background-color: #ff453a;\\n}\\n\\n.cancelDelete {\\n  background-color: transparent;\\n  color: #0071e3;\\n  border: 1px solid #0071e3;\\n}\\n\\n.cancelDelete:hover {\\n  background-color: rgba(0, 113, 227, 0.1);\\n}\\n\\n/* Focus states for accessibility */\\nbutton:focus,\\ninput:focus,\\nselect:focus,\\ntextarea:focus {\\n  outline: none;\\n}\\n\\n@media (max-width: 600px) {\\n  .TaskModal,\\n  .editModal,\\n  .deleteModal {\\n    padding: 1.5rem;\\n    width: 95%;\\n  }\\n}\\n"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///365\n')},540:module=>{eval('\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement("style");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTQwLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2RvbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcz9kZTZjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICBvcHRpb25zLnNldEF0dHJpYnV0ZXMoZWxlbWVudCwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgb3B0aW9ucy5pbnNlcnQoZWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///540\n')},659:module=>{eval('\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === "undefined") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error("Couldn\'t find a style target. This probably means that the value for the \'insert\' parameter is invalid.");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjU5LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3RvZG9saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcz9iMjE0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgbWVtbyA9IHt9O1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcbiAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7XG5cbiAgICAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gIH1cbiAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuICBpZiAoIXRhcmdldCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gIH1cbiAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///659\n')},825:module=>{eval('\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = "";\n  if (obj.supports) {\n    css += "@supports (".concat(obj.supports, ") {");\n  }\n  if (obj.media) {\n    css += "@media ".concat(obj.media, " {");\n  }\n  var needLayer = typeof obj.layer !== "undefined";\n  if (needLayer) {\n    css += "@layer".concat(obj.layer.length > 0 ? " ".concat(obj.layer) : "", " {");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += "}";\n  }\n  if (obj.media) {\n    css += "}";\n  }\n  if (obj.supports) {\n    css += "}";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== "undefined") {\n    css += "\\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === "undefined") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODI1LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0RBQWtEO0FBQ2xEO0FBQ0E7QUFDQSwwQ0FBMEM7QUFDMUM7QUFDQTtBQUNBO0FBQ0EsaUZBQWlGO0FBQ2pGO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EseURBQXlEO0FBQ3pEOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG9kb2xpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcz9lNDc5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQob2JqLnN1cHBvcnRzLCBcIikge1wiKTtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIik7XG4gIH1cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJAbGF5ZXJcIi5jb25jYXQob2JqLmxheWVyLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQob2JqLmxheWVyKSA6IFwiXCIsIFwiIHtcIik7XG4gIH1cbiAgY3NzICs9IG9iai5jc3M7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH1cblxuICAvLyBGb3Igb2xkIElFXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZUVsZW1lbnQucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBzdHlsZUVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQpO1xufVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIGlmICh0eXBlb2YgZG9jdW1lbnQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUoKSB7fSxcbiAgICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge31cbiAgICB9O1xuICB9XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///825\n')}},__webpack_module_cache__={};function __webpack_require__(n){var t=__webpack_module_cache__[n];if(void 0!==t)return t.exports;var e=__webpack_module_cache__[n]={id:n,exports:{}};return __webpack_modules__[n](e,e.exports,__webpack_require__),e.exports}__webpack_require__.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return __webpack_require__.d(t,{a:t}),t},__webpack_require__.d=(n,t)=>{for(var e in t)__webpack_require__.o(t,e)&&!__webpack_require__.o(n,e)&&Object.defineProperty(n,e,{enumerable:!0,get:t[e]})},__webpack_require__.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t),__webpack_require__.nc=void 0;var __webpack_exports__=__webpack_require__(92)})();